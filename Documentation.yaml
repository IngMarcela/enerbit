openapi: 3.0.3
info:
  title: Reto tecnico - Enerbit
  version: V1
  description: |-
    Reto que tiene los siguies requerimientos:
    - Cambiar estado is_active=True al finalizar la primera orden de servicio
    - Crear la fecha para start_date del cliente al finalizar la primera orden de servicio
    - Verificar que la diferencia entre las fechas de planeacion no sea mayor a dos horas
    - Antes de realizar su primer orden de servicio, el estado por defecto del cliente es is_active=fals. Despues de realizar la primera orden, el estado cambia a True. Si el cliente desea volver a tener un estado de is_active=False, solo podra hacerlo a traves de la realizacion de otra orden de servicio
    - En casi de que el cliente cambie su estado de is_active de True a False, es necesario agregar una end_date para conocer la fecha en que dejo de estar activo. 
    - Al finalizar una orden de servicio, se debe enviar un evento a traves de un Redis stream para mantener actualizados a otros servicios que puedan estar interesados en conocer el estado de la orden de servicio
    - Crear un endpoint para determinar los clientes activos actualmente
    - Crear un endpoint para consultar las ordenes de servicio dentro de un rango de fechas especificos (since y until) o por status
    - Si se consulta una orden de servicio, el endpoint debera devolver la estructura completa del cliente correspondiente a dicha orden embebida en el JSON
tags:
  - name: customer
    description: Gestion para los clientes
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /customer/active/:
    get:
      tags:
        - customer
      summary: Encontrar los clientes activo
      description: endpoint para determinar los clientes activos actualmente
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        '404':
          description: customer not found
  /customer/store:
    post:
      tags:
        - customer
      summary: Agregar un cliente
      description: Agregar un cliente en la base de datos
      requestBody:
        description: Agregar un cliente para una orden
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerNew'
          application/xml:
            schema:
              $ref: '#/components/schemas/customerNew'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/customerNew'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        '405':
          description: Invalid input}
  /workOrder/store:
    post:
      tags:
        - workOrder
      summary: Endpoint para crear una orden
      description: Endpoint para crear una orden
      requestBody:
        description: Endpoint para crear una orden y cambiar el estado del cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workOrder'
          application/xml:
            schema:
              $ref: '#/components/schemas/workOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/workOrder'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workOrder'
            application/xml:
              schema:
                $ref: '#/components/schemas/workOrder'
        '405':
          description: Invalid input
  /workOrder/date:
    get:
      tags:
        - workOrder
      summary: Encontrar las ordenes de servicio dentro de un rango de fechas especificos (since y until)
      description: Encontrar las ordenes de servicio dentro de un rango de fechas especificos (since y until)
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/date'
          application/xml:
            schema:
              $ref: '#/components/schemas/date'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/date'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workOrder'
            application/xml:
              schema:
                $ref: '#/components/schemas/workOrder'
        '400':
          description: Invalid Date supplied
        '404':
          description: customer not found
  /workOrder/customer/{id}:
    get:
      tags:
        - workOrder
      summary: Encontrar por el id del cliente la orden
      description: Retornar la informacion de la orden
      operationId: getcustomerById
      parameters:
        - name: customerId
          in: path
          description: ID of customer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        '400':
          description: Invalid ID supplied
        '404':
          description: customer not found
  /workOrder/customerOrder/{id}:
    get:
      tags:
        - workOrder
      summary: Encontrar por el id del cliente de la orden
      description: Retornar la informacion de la orden
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of customer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workOrder'
            application/xml:
              schema:
                $ref: '#/components/schemas/workOrder'
        '400':
          description: Invalid ID supplied
        '404':
          description: customer not found
components:
  schemas:
    workOrder:
      required:
        - customer_id
        - title
        - planned_date_begin
        - planned_date_end
        - status
        - created_at
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        customer_id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: order libre
        planned_date_begin:
          type: date
          example: "2023-04-03T12:09:00.000Z"
        planned_date_end:
          type: date
          example: "2023-04-03T12:09:00.000Z"
        status:
          type: string
          example: "Active"
        created_at:
          type: date
          example: "2023-04-03T12:09:00.000Z"
      xml:
        name: workOrder
    customerNew:
      required:
        - first_name
        - last_name
        - address
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        first_name:
          type: string
          example: Usuario 1
        last_name:
          type: string
          example: Apellido 1
        address:
          type: string
          example: "avenida siempre viva"
      xml:
        name: customer
    customer:
      required:
        - first_name
        - last_name
        - address
        - start_date
        - end_date
        - is_active
        - created_at
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        first_name:
          type: string
          example: Usuario 1
        last_name:
          type: string
          example: Apellido 1
        address:
          type: string
          example: "avenida siempre viva"
        end_date:
          type: date
          example: "2023-04-03T12:09:00.000Z"
        start_date:
          type: date
          example: "2023-04-03T12:09:00.000Z"
        is_active:
          type: bool
          example: "true"
        created_at:
          type: date
          example: "2023-04-03T12:09:00.000Z"
      xml:
        name: customer
    date:
      required:
        - start_date
        - end_date
      type: object
      properties:
        start_date:
          type: date
          example: 2023-04-03T12:09:00.000Z
        end_date:
          type: date
          example: 2023-04-05T12:09:00.000Z
      xml:
        name: date
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        first_name: '##default'
  requestBodies:
    customer:
      description: Objeto usuario necesita estar agregado a la base de datos
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/customer'
        application/xml:
          schema:
            $ref: '#/components/schemas/customer'
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header